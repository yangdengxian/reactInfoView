'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _server = require('react-dom/server');

var _server2 = _interopRequireDefault(_server);

var _simpleResponse = require('./handlers/simpleResponse');

var _ReactResponseGreeter = require('./utils/ReactResponseGreeter');

var _ReactResponseGreeter2 = _interopRequireDefault(_ReactResponseGreeter);

var _Html = require('./utils/Html');

var _Html2 = _interopRequireDefault(_Html);

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var factory = function factory() {

    var defaultRenderingFunction = function defaultRenderingFunction(ReactElement) {
        return function (renderProps, req, res) {
            return {
                component: _server2.default.renderToString(_react2.default.cloneElement(ReactElement, _extends({}, renderProps)))
            };
        };
    };

    var getTemplatePropsProvider = function getTemplatePropsProvider(children, renderFunction) {

        if (_react2.default.isValidElement(children)) {
            // If it is the thing we want to render
            return renderFunction(children);
        }

        // Otherwise we take it in good faith that it is a custom render function.
        return children;
    };

    var buildServer = function buildServer(props, parent) {
        var appHandler = props.appHandler;
        var template = props.template;
        var children = props.children;
        var renderFunction = props.renderFunction;


        var responseHandler = appHandler(template, getTemplatePropsProvider(children, renderFunction));

        var route = typeof parent.route === "undefined" ? props : parent.route;

        parent.serverApp[route.method](route.path, responseHandler);

        return {
            response: {
                handler: responseHandler
            }
        };
    };

    var Response = function (_Component) {
        _inherits(Response, _Component);

        function Response() {
            _classCallCheck(this, Response);

            return _possibleConstructorReturn(this, Object.getPrototypeOf(Response).apply(this, arguments));
        }

        return Response;
    }(_react.Component);

    Response.propTypes = {
        template: _react.PropTypes.func.isRequired,
        path: _react.PropTypes.string.isRequired,
        method: _react.PropTypes.string.isRequired,
        children: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.element]).isRequired,
        appHandler: _react.PropTypes.func.isRequired,
        renderFunction: _react.PropTypes.func.isRequired
    };
    Response.defaultProps = {
        path: "/",
        method: "get",
        template: _Html2.default,
        children: _react2.default.createElement(_ReactResponseGreeter2.default, null),
        appHandler: (0, _simpleResponse.createSimpleResponse)(),
        renderFunction: defaultRenderingFunction
    };
    Response.buildServer = buildServer;


    return Response;
};

exports.default = factory();
module.exports = exports['default'];